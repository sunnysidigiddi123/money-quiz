name: Deploy to Kubernetes

on:
  workflow_dispatch:
    inputs:
      repository_name:
        description: 'Enter repository name:'
        required: true
        type: string
      image_name:
        description: 'Enter image name:'
        required: true
        type: string        
      cluster_environment:
        description: 'Which environment you want to deploy?'
        required: true
        type: choice
        options:
          - "testing"
          - "production"
      version:
        description: 'Enter the application version:'
        required: true
        type: string
      namespace:
        required: true
        description: 'Enter the application namespace:'
        type: string

  workflow_call:
    inputs:
      repository_name:
        description: 'Enter repository name:'
        required: true
        type: string
      image_name:
        description: 'Enter image name:'
        required: true
        type: string           
      cluster_environment:
        description: 'Which environment you want to deploy?'
        required: true
        type: string
      version:
        description: 'Enter the application version:'
        required: true
        type: string
    secrets:
      NAMESPACE:
        required: true
        description: 'Enter the application namespace:'
      JENKINS_URL:
        required: true
        description: 'Jenkins URL'
      JENKINS_USER:
        required: true
        description: 'Jenkins USER'
      JENKINS_TOKEN:
        required: true
        description: 'Jenkins TOKEN'

jobs:
  trigger-jenkins-job:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Jenkins Job
        uses: Calance-US/build-jenkins-job@main
        with:
          jenkins-url: "${{ secrets.JENKINS_URL }}"
          jenkins-token: "${{ secrets.JENKINS_TOKEN }}"
          user: "${{ secrets.JENKINS_USER }}"
          job-path: "job/monorepo-test"
          job-params: '{"SERVICE_NAME" : "${{ inputs.repository_name }}","IMAGE_NAME" : "${{ inputs.repository_name }}-${{ inputs.image_name }}", "CLUSTER_ENVIRONMENT": "${{ inputs.cluster_environment }}" , "VERSION": "${{ inputs.version }}", "NAMESPACE": "${{ inputs.namespace || secrets.NAMESPACE }}" }'
